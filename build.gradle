/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */
buildscript {
    ext {
        lombokVersion    = '1.18.8'
        junitVersion     = '5.5.2'
    }

    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        // classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.83")
    }
}



plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'jacoco'
    // id 'checkstyle'
    id 'project-report'
    id 'build-dashboard'
    // id 'net.serenity-bdd.aggregator'
}

// apply plugin: 'jacoco'
// apply plugin: 'net.serenity-bdd.aggregator'


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}


group   = 'com.airline'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit Jupiter API for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.2'


    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    // testCompile 'net.serenity-bdd:serenity-core:2.0.83'
    // testCompile 'net.serenity-bdd:serenity-junit:2.0.83'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}



// See this page for options https://reflectoring.io/jacoco/
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }

        rule {
            limit {
                counter = 'LINE'
                value   = 'COVEREDRATIO'
                minimum = 1.0
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}



// checkstyle {
//     toolVersion "7.8.1"
// }
// checkstyleMain {
//     source = 'src/main/java'
// }
// checkstyleTest {
//     source = 'src/test/java'
// }



